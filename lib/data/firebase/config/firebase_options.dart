// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: DotEnv().get('WEB_API_KEY'),
    appId: DotEnv().get('WEB_API_KEY'),
    messagingSenderId: DotEnv().get('MESSAGING_SENDER_ID'),
    projectId: DotEnv().get('PROJEC_ID'),
    authDomain: DotEnv().get('WEB_AUTH_DOMAIN'),
    storageBucket: DotEnv().get('STORAGE_BUCKET'),
    measurementId: DotEnv().get('WEB_MEASUREMENT_ID'),
  );

  static FirebaseOptions android = FirebaseOptions(
    apiKey: DotEnv().get('ADNROID_API_KEY'),
    appId: DotEnv().get('1:185003222416:android:74f90f0e5dbd22bd473f15'),
    messagingSenderId: DotEnv().get('MESSAGING_SENDER_ID'),
    projectId: DotEnv().get('PROJEC_ID'),
    storageBucket: DotEnv().get('STORAGE_BUCKET'),
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: DotEnv().get('IOS_API_KEY'),
    appId:  DotEnv().get('IOS_API_ID'),
    messagingSenderId:  DotEnv().get('MESSAGING_SENDER_ID'),
    projectId:  DotEnv().get('PROJEC_ID'),
    storageBucket:  DotEnv().get('STORAGE_BUCKET'),
    iosBundleId:  DotEnv().get('IOS_BUNDLE_ID'),
  );
}
